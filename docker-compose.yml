services:
  # VAULT ##################################
  vault:
    build:
      context: ./vault
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8200:8200"
    networks:
      - transcendence
    volumes:
      - ./vault/config:/vault/config
      - ./vault-secrets:/vault/secrets
    cap_add:
      - IPC_LOCK
    restart: unless-stopped

  # DB POSTGRES ############################
  database:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./logs/db:/var/log/postgresql
    networks:
      - transcendence
    restart: unless-stopped

  # CACHE REDIS ############################
  redis:
    image: redis:7
    networks:
      - transcendence
    restart: unless-stopped

  # FRONTEND NGINX #########################
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "4242:443"
    networks:
      - transcendence
    volumes:
      - ./frontend/html:/usr/share/nginx/html
      - ./backend/uploaded_files:/usr/share/nginx/uploaded_files
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped

  # DJANGO ################################
  backend:
    build: ./backend
    command: [ 'wait-for-it.sh', 'database:5432', '--', '/code/check-vault.sh', '--', '/code/startup.sh' ]
    networks:
      - transcendence
    volumes:
      - ./backend:/code
      - ./logs/backend:/code/logs
      - ./vault-secrets:/vault-secrets
    restart: unless-stopped

# RESEAU ISOLÃ‰ #############################
networks:
  transcendence:
    driver: bridge