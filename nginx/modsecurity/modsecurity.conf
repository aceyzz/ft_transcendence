# activation
SecRuleEngine On

# config des logs
SecAuditEngine RelevantOnly
SecAuditLog /var/log/nginx/modsec_audit.log
SecAuditLogFormat JSON
SecAuditLogType Serial

# definition des acces
SecRequestBodyAccess On		# OK analyse du corps des requetes
SecResponseBodyAccess Off	# ignorer analyse des reponses

# size des requetes
SecRequestBodyLimit 13107200
SecRequestBodyNoFilesLimit 131072

# analyse des multipart
SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
	"id:200003,phase:2,t:none,log,deny,status:400,msg:'Corrupted multipart/form-data parsing encountered'"

# injections XSS
SecRule REQUEST_HEADERS:Content-Type "text/html" \
	"id:900990,phase:2,t:none,t:htmlEntityDecode,t:lowercase,log,deny,status:403,msg:'XSS attack detected'"

# injections SQL
SecRule ARGS "@rx select.*from" \
	"id:981172,phase:2,t:none,log,block,msg:'SQL Injection detected'"

# protection fichiers sensibles (a ajouter en fonction de nos dossiers sensibles)
SecRule REQUEST_URI "@contains /etc/passwd" \
	"id:981245,phase:2,t:none,log,block,msg:'Access to sensitive files detected'"

SecRule REQUEST_METHOD "^(PUT|DELETE)$" "id:1001,phase:1,allow,log"

# niveau de paranoia et score
SecAction "id:900000, phase:1, nolog, pass, t:none, setvar:tx.paranoia_level=2"
SecAction "id:900110, phase:1, nolog, pass, t:none, setvar:tx.inbound_anomaly_score_threshold=5"
SecAction "id:900120, phase:1, nolog, pass, t:none, setvar:tx.outbound_anomaly_score_threshold=4"

# inclusion des regles OWASP CRS
Include /etc/nginx/modsec/coreruleset/crs-setup.conf
Include /etc/nginx/modsec/coreruleset/rules/*.conf

# - ModSecurity activé
# - Log des événements pertinents
# - Analyse des requêtes HTTP
# - Protection contre XSS, SQL Injection, accès aux fichiers sensibles
# - Inclusion des règles OWASP CRS (lot de règles de sécurité recommandées)